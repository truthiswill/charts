---
###################################
# Orchestrator StatefulSet
###################################
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: orchestrator
spec:
  serviceName: orchestrator-headless
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: vitess
      component: orchestrator
  template:
    metadata:
      labels:
        app: vitess
        component: orchestrator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          # strongly prefer to stay away from other orchestrators
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "vitess"
                  component: "orchestrator"
      initContainers:
        - name: init-orchestrator
          image: {{ $orc.image | quote }}
          volumeMounts:
            - name: config-map
              mountPath: /conftmp/
            - name: config-shared
              mountPath: /conf/
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command: ["bash"]
          args:
            - "-c"
            - |
              set -ex

              # make a copy of the config map file before editing it locally
              cp /conftmp/orchestrator.conf.json /conf/orchestrator.conf.json

              # set the local config to advertise/bind its own service IP
              sed -i -e "s/POD_NAME/$MY_POD_NAME/g" /conf/orchestrator.conf.json
      containers:
        - name: orchestrator
          image: {{ $orc.image | quote }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: web
              protocol: TCP
            - containerPort: 10008
              name: raft
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/lb-check
              port: 3000
            initialDelaySeconds: 300
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: "/api/raft-health"
              port: 3000
            timeoutSeconds: 10

          resources:
{{ toYaml ($orc.resources) | indent 12 }}

          volumeMounts:
            - name: config-shared
              mountPath: /conf/
            - name: tmplogs
              mountPath: /tmp
{{ include "user-secret-volumeMounts" $defaultVtctlclient.secrets | indent 12 }}
          env:
            - name: VTCTLD_SERVER_PORT
              value: "15999"

        - name: recovery-log
          image: vitess/logtail:helm-1.0.6
          imagePullPolicy: IfNotPresent
          env:
          - name: TAIL_FILEPATH
            value: /tmp/recovery.log
          volumeMounts:
            - name: tmplogs
              mountPath: /tmp

        - name: audit-log
          image: vitess/logtail:helm-1.0.6
          imagePullPolicy: IfNotPresent
          env:
          - name: TAIL_FILEPATH
            value: /tmp/orchestrator-audit.log
          volumeMounts:
            - name: tmplogs
              mountPath: /tmp

      volumes:
        - name: config-map
          configMap:
            name: orchestrator-cm
        - name: config-shared
          emptyDir: {}
        - name: tmplogs
          emptyDir: {}
{{ include "user-secret-volumes" $defaultVtctlclient.secrets | indent 8 }}
{{- end -}}
